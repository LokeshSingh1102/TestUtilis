{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","Home","onClick","toggleMode","aria-checked","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","settext","Fragment","style","color","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","innerHTML","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.caa152c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className={`navbar-brand  `} href=\"#\">{props.title}</a> {/*props used here   className={`navbar-brand  `} */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.Home}</a> {/*props used here aria-current=\"page\"  className={`nav-a active `}  */}\r\n              </li>\r\n              {/* <li className=\"nav-item \">\r\n                <a class=\"nav-link\" href=\"/about\">about</a>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} aria-checked=\"false\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Mode</label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  Home: 'home'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text, settext] = useState('');  // state\r\n\r\n    const handleUptext = () => {\r\n        let newText = text.toUpperCase();\r\n        settext(newText);\r\n        props.showAlert('converted to upper case','success')\r\n    }\r\n    const handlelotext = () => {\r\n        let newText = text.toLowerCase();\r\n        settext(newText);\r\n        props.showAlert('converted to lower case','success')\r\n    }\r\n    const handletoClear = () => {\r\n        let newText = '';\r\n        settext(newText);\r\n        props.showAlert('Text cleared','success')\r\n    }\r\n\r\n    const handleToChange = (event) => {\r\n        // console.log(event.target.value);\r\n        settext(event.target.value)\r\n    }\r\n    const handletoUnder = () => {\r\n        // let newText = text;\r\n        document.getElementById('under').innerHTML = `<u>${text}</u>`\r\n        props.showAlert('text underlined','success')\r\n    }\r\n    const handleSelect = () => {\r\n        let text = document.getElementById('textform');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('copied to clipboard','success')\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        const newText = text.split(/[ ]+/)  // '/[]+/' this is known as regular expression literal in js anything inside / /\r\n        // const reg = /[ ]+/\r\n        // console.log(reg.source);\r\n        settext(newText.join(\" \"));\r\n        props.showAlert('extra spaces removed','success')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"mb-3 \" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                    <label htmlFor=\"textform\" className=\"form-label \" > <h4 className='my-3' >Example textarea</h4> </label>\r\n                    <textarea className=\"form-control\" id=\"textform\" rows=\"8\" value={text} onChange={handleToChange} style={{ color: props.mode === 'dark' ? 'white' : 'black', backgroundColor: props.mode === 'dark' ? 'grey' : 'white', }}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUptext}> UPPER</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handlelotext}> LOWER</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handletoUnder}> Underline</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handletoClear}>Clear</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleSelect}>Copy</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n                <p>{text.split(' ').length} words and {text.length} characters </p>\r\n                <h4 className='my-1'>Preview</h4>\r\n                <p id='under'>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className='container'>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","//import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\n\nfunction App() { //this will return only one component\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey'\n      showAlert('Dark mode has been enabled', 'success')\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode has been enabled', 'success')\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" Home=\"Home\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className='container'>\n        <Textform mode={mode} showAlert={showAlert} />\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About />} />\n            <Route path=\"/\" element={<Textform mode={mode} showAlert={showAlert} />} /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  \n    // fragment tag under this we can have multiple component <></>\n    //component -> A collection of tags under a tag \n    // <>\n    // <nav>\n    //   <li>home</li>\n    //   <li>home</li>\n    // </nav>\n    // </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}